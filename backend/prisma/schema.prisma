// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  username       String
  passwordHash   String
  profilePicture String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  blogs          Blog[]
  comments       Comment[]
  likes          Like[]
}

model Blog {
  id          String    @id @default(uuid())
  title       String
  content     String
  bannerImage String
  published   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  authorId    String
  author      User      @relation(fields: [authorId], references: [id])
  comments    Comment[]
  totalLikes  Int    @default(0)
  likes       Like[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  blogId    String
  blog      Blog     @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  blogId    String
  blog      Blog     @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, blogId])
}
